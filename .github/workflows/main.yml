name: "Gradle build"

on:
  release:
    types:
      - created
      - released
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - 'test-branch'
      - 'main'
      - 'development'
      - 'release/**'
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
jobs:
#  java-job:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Setup JDK 21 microsoft
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'microsoft'
#  gradle-job:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Setup Gradle and run build
#        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: write
      packages: write
      id-token: write
#    needs:
#      - java-job
#      - gradle-job
    #todo setup docker context
    #todo: setup docker build
    #todo: setup gcloud NP
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create a tag
        run: |
          git config --global user.email "milos.maksimovic54@gmail.com"
          git config --global user.name "Sipturak"
          npx standard-version -i RELEASE_BODY.md --skip.commit

      - name: Publish tag
        id: publish_tag
        run: | 
          git push --follow-tags
          echo "tag_name=$(git describe HEAD --abbrev=0)" >> $GITHUB_ENV

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.MY_GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.publish_tag.outputs.tag_name}}
          release_name: Prerelease of ${{steps.publish_tag.outputs.tag_name}}
          prerelease: true
          body-path: RELEASE_BODY.md
          body: | 
            Create pre_release for non production and testing for ${{steps.publish_tag.outputs.tag_name}}

      - name: Setup JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          cache-read-only: true
          cache-write-only: true
          cache-cleanup: on-success
      - name: Cache gradle
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            gradle-

      - name: Build with gradle wrapper
        run: ./gradlew build
